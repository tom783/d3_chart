[{"/Users/tom783/programming/practices/d3Practice/d3chart/src/index.js":"1","/Users/tom783/programming/practices/d3Practice/d3chart/src/reportWebVitals.js":"2","/Users/tom783/programming/practices/d3Practice/d3chart/src/App.js":"3","/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/components/index.js":"4","/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/utils/convertChartData.js":"5","/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/components/Brush.js":"6","/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/tempData/lineChartData.js":"7","/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/components/ZoomableLineChart.js":"8","/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/components/ZoomableAreaChart.js":"9","/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/components/ZoomableAreaChartTooltip.js":"10"},{"size":500,"mtime":1611798236434,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1611798236435,"results":"13","hashOfConfig":"12"},{"size":600,"mtime":1612777461897,"results":"14","hashOfConfig":"12"},{"size":258,"mtime":1612341020252,"results":"15","hashOfConfig":"12"},{"size":232,"mtime":1612226426390,"results":"16","hashOfConfig":"12"},{"size":1437,"mtime":1612245508187,"results":"17","hashOfConfig":"12"},{"size":392,"mtime":1612331138796,"results":"18","hashOfConfig":"12"},{"size":2125,"mtime":1612250685414,"results":"19","hashOfConfig":"12"},{"size":10246,"mtime":1612776420860,"results":"20","hashOfConfig":"12"},{"size":6451,"mtime":1612780137230,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"10ugnlg",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/tom783/programming/practices/d3Practice/d3chart/src/index.js",[],["45","46"],"/Users/tom783/programming/practices/d3Practice/d3chart/src/reportWebVitals.js",[],"/Users/tom783/programming/practices/d3Practice/d3chart/src/App.js",["47","48","49"],"/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/components/index.js",[],"/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/utils/convertChartData.js",[],"/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/components/Brush.js",["50","51"],"import * as React from \"react\"\nimport { brushX, axisTop, scaleLinear, select, extent, scaleUtc } from \"d3\"\nimport { gatherByKeys } from \"../utils/convertChartData\"\n\nfunction Brush({ data = [] }) {\n  const testRef = React.useRef()\n  const [state, setState] = React.useState([])\n\n  const brushEvent = (e) => {\n    const selectedExtend = e.selection\n    setState(selectedExtend)\n  }\n\n  const createBrush = () => {\n    const _data = gatherByKeys(data)\n\n    const svgInstance = select(testRef.current)\n    const scale = scaleUtc()\n      .domain(extent(_data.timestamp, (d) => d))\n      .range([0, 1200])\n    const setBrushEvent = brushX()\n      .extent([\n        [0, 0], //[brush 설정 x축 범위, brush 높이 좌표]\n        [1200, 100],\n      ])\n      .on(\"brush\", brushEvent)\n    const dayAxis = axisTop().scale(scale)\n\n    svgInstance\n      .append(\"g\")\n      .attr(\"class\", \"brushaxis\")\n      .attr(\"transform\", \"translate(0, 25)\")\n\n    svgInstance.select(\"g.brushaxis\").call(dayAxis) // 브러쉬 axis축 설정\n    svgInstance.append(\"g\").attr(\"class\", \"brush\").selectAll(\"g.brush\")\n\n    svgInstance.select(\"g.brush\").call(setBrushEvent) // 브러쉬 이벤트 바인딩\n  }\n\n  React.useEffect(() => {\n    createBrush()\n  }, [])\n\n  return (\n    <>\n      <svg width='1200px' ref={testRef}></svg>\n      <div>\n        {state.map((i, idx) => (\n          <p key={idx}>{i}</p>\n        ))}\n      </div>\n    </>\n  )\n}\n\nexport default Brush\n","/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/tempData/lineChartData.js",[],"/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/components/ZoomableLineChart.js",["52","53"],"import * as React from \"react\"\nimport {\n  select,\n  brushX,\n  line,\n  scaleLinear,\n  extent,\n  scaleUtc,\n  axisBottom,\n  axisLeft,\n} from \"d3\"\nimport { gatherByKeys } from \"../utils/convertChartData\"\n\nfunction ZoomableLineChart({ data = [] }) {\n  const svgRef = React.useRef()\n  const [chartNode, setChartNode] = React.useState(null)\n\n  const margin = {\n    top: 20,\n    right: 30,\n    bottom: 30,\n    left: 50,\n  }\n  const width = 1200\n  const height = 400\n\n  const makeChart = () => {\n    const svgLine = select(svgRef.current)\n    const _data = gatherByKeys(data)\n\n    const x = scaleUtc()\n      .domain(extent(_data.timestamp, (d) => d))\n      .range([margin.left, width - margin.right])\n\n    const y = scaleLinear()\n      .domain(extent(_data.value, (d) => d))\n      .range([height - margin.bottom, margin.top])\n\n    const xAxis = (g) =>\n      g\n        .attr(\"transform\", `translate(0, ${height - margin.bottom})`)\n        .call(axisBottom(x))\n\n    const yAxis = (g) =>\n      g.attr(\"transform\", `translate(${margin.left}, 0)`).call(axisLeft(y))\n\n    const brushEvent = (e) => {\n      const selectedExtend = e.selection\n      console.log(\"event\", selectedExtend)\n    }\n    const setBrushEvent = brushX()\n      .extent([\n        [margin.left, 0],\n        [width - margin.right, height - margin.bottom],\n      ])\n      .on(\"brush\", brushEvent)\n\n    const testBrush = (g) => g.attr(\"class\", \"brush\").call(setBrushEvent)\n\n    const _line = line()\n      .defined((_data) => !isNaN(_data.value))\n      .x((d) => x(d.timestamp))\n      .y((d) => y(d.value))\n\n    svgLine.append(\"g\").call(xAxis)\n    svgLine.append(\"g\").call(yAxis)\n\n    svgLine.append(\"g\").call(testBrush)\n\n    svgLine\n      .append(\"path\")\n      .datum(data)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"steelblue\")\n      .attr(\"stroke-width\", 1.5)\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"stroke-linecap\", \"round\")\n      .attr(\"d\", _line)\n\n    return svgLine.node()\n  }\n\n  React.useEffect(() => {\n    setChartNode(makeChart())\n  }, [data])\n\n  return <svg width={width} height={height} ref={svgRef}></svg>\n}\n\nexport default ZoomableLineChart\n","/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/components/ZoomableAreaChart.js",["54","55","56","57","58"],"/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/components/ZoomableAreaChartTooltip.js",["59","60","61","62","63","64","65"],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":3,"column":3,"nodeType":"72","messageId":"73","endLine":3,"endColumn":8},{"ruleId":"70","severity":1,"message":"74","line":4,"column":3,"nodeType":"72","messageId":"73","endLine":4,"endColumn":20},{"ruleId":"70","severity":1,"message":"75","line":5,"column":3,"nodeType":"72","messageId":"73","endLine":5,"endColumn":20},{"ruleId":"70","severity":1,"message":"76","line":2,"column":27,"nodeType":"72","messageId":"73","endLine":2,"endColumn":38},{"ruleId":"77","severity":1,"message":"78","line":42,"column":6,"nodeType":"79","endLine":42,"endColumn":8,"suggestions":"80"},{"ruleId":"70","severity":1,"message":"81","line":16,"column":10,"nodeType":"72","messageId":"73","endLine":16,"endColumn":19},{"ruleId":"77","severity":1,"message":"82","line":85,"column":6,"nodeType":"79","endLine":85,"endColumn":12,"suggestions":"83"},{"ruleId":"70","severity":1,"message":"84","line":12,"column":3,"nodeType":"72","messageId":"73","endLine":12,"endColumn":6},{"ruleId":"70","severity":1,"message":"85","line":17,"column":8,"nodeType":"72","messageId":"73","endLine":17,"endColumn":14},{"ruleId":"70","severity":1,"message":"86","line":323,"column":17,"nodeType":"72","messageId":"73","endLine":323,"endColumn":18},{"ruleId":"70","severity":1,"message":"87","line":335,"column":11,"nodeType":"72","messageId":"73","endLine":335,"endColumn":20},{"ruleId":"77","severity":1,"message":"88","line":367,"column":6,"nodeType":"79","endLine":367,"endColumn":12,"suggestions":"89"},{"ruleId":"70","severity":1,"message":"90","line":13,"column":3,"nodeType":"72","messageId":"73","endLine":13,"endColumn":11},{"ruleId":"70","severity":1,"message":"91","line":14,"column":3,"nodeType":"72","messageId":"73","endLine":14,"endColumn":10},{"ruleId":"70","severity":1,"message":"85","line":16,"column":8,"nodeType":"72","messageId":"73","endLine":16,"endColumn":14},{"ruleId":"70","severity":1,"message":"92","line":18,"column":7,"nodeType":"72","messageId":"73","endLine":18,"endColumn":16},{"ruleId":"70","severity":1,"message":"93","line":119,"column":7,"nodeType":"72","messageId":"73","endLine":119,"endColumn":13},{"ruleId":"70","severity":1,"message":"94","line":124,"column":7,"nodeType":"72","messageId":"73","endLine":124,"endColumn":15},{"ruleId":"77","severity":1,"message":"82","line":251,"column":6,"nodeType":"79","endLine":251,"endColumn":12,"suggestions":"95"},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'Brush' is defined but never used.","Identifier","unusedVar","'ZoomableLineChart' is defined but never used.","'ZoomableAreaChart' is defined but never used.","'scaleLinear' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'createBrush'. Either include it or remove the dependency array.","ArrayExpression",["98"],"'chartNode' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'makeChart'. Either include it or remove the dependency array.",["99"],"'arc' is defined but never used.","'styled' is defined but never used.","'x' is assigned a value but never used.","'brushNode' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'chartNode' and 'makeChart'. Either include them or remove the dependency array. You can also do a functional update 'setChartNode(c => ...)' if you only need 'chartNode' in the 'setChartNode' call.",["100"],"'bisector' is defined but never used.","'pointer' is defined but never used.","'initState' is assigned a value but never used.","'focusY' is assigned a value but never used.","'contextY' is assigned a value but never used.",["101"],"no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"104","fix":"108"},"Update the dependencies array to be: [createBrush]",{"range":"109","text":"110"},"Update the dependencies array to be: [data, makeChart]",{"range":"111","text":"112"},"Update the dependencies array to be: [chartNode, data, makeChart]",{"range":"113","text":"114"},{"range":"115","text":"112"},[1182,1184],"[createBrush]",[2016,2022],"[data, makeChart]",[9869,9875],"[chartNode, data, makeChart]",[6320,6326]]