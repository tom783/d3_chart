[{"/Users/tom783/programming/practices/d3Practice/d3chart/src/index.js":"1","/Users/tom783/programming/practices/d3Practice/d3chart/src/reportWebVitals.js":"2","/Users/tom783/programming/practices/d3Practice/d3chart/src/App.js":"3","/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/components/index.js":"4","/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/utils/convertChartData.js":"5","/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/components/Brush.js":"6","/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/tempData/lineChartData.js":"7","/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/components/ZoomableLineChart.js":"8","/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/components/ZoomableAreaChart.js":"9","/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/components/ZoomableAreaChartTooltip.js":"10"},{"size":500,"mtime":1611798236434,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1611798236435,"results":"13","hashOfConfig":"12"},{"size":565,"mtime":1612760412937,"results":"14","hashOfConfig":"12"},{"size":258,"mtime":1612341020252,"results":"15","hashOfConfig":"12"},{"size":232,"mtime":1612226426390,"results":"16","hashOfConfig":"12"},{"size":1437,"mtime":1612245508187,"results":"17","hashOfConfig":"12"},{"size":392,"mtime":1612331138796,"results":"18","hashOfConfig":"12"},{"size":2125,"mtime":1612250685414,"results":"19","hashOfConfig":"12"},{"size":9572,"mtime":1612765282284,"results":"20","hashOfConfig":"12"},{"size":3065,"mtime":1612754780009,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"10ugnlg",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/tom783/programming/practices/d3Practice/d3chart/src/index.js",[],["45","46"],"/Users/tom783/programming/practices/d3Practice/d3chart/src/reportWebVitals.js",[],"/Users/tom783/programming/practices/d3Practice/d3chart/src/App.js",["47","48"],"/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/components/index.js",[],"/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/utils/convertChartData.js",[],"/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/components/Brush.js",["49","50"],"import * as React from \"react\"\nimport { brushX, axisTop, scaleLinear, select, extent, scaleUtc } from \"d3\"\nimport { gatherByKeys } from \"../utils/convertChartData\"\n\nfunction Brush({ data = [] }) {\n  const testRef = React.useRef()\n  const [state, setState] = React.useState([])\n\n  const brushEvent = (e) => {\n    const selectedExtend = e.selection\n    setState(selectedExtend)\n  }\n\n  const createBrush = () => {\n    const _data = gatherByKeys(data)\n\n    const svgInstance = select(testRef.current)\n    const scale = scaleUtc()\n      .domain(extent(_data.timestamp, (d) => d))\n      .range([0, 1200])\n    const setBrushEvent = brushX()\n      .extent([\n        [0, 0], //[brush 설정 x축 범위, brush 높이 좌표]\n        [1200, 100],\n      ])\n      .on(\"brush\", brushEvent)\n    const dayAxis = axisTop().scale(scale)\n\n    svgInstance\n      .append(\"g\")\n      .attr(\"class\", \"brushaxis\")\n      .attr(\"transform\", \"translate(0, 25)\")\n\n    svgInstance.select(\"g.brushaxis\").call(dayAxis) // 브러쉬 axis축 설정\n    svgInstance.append(\"g\").attr(\"class\", \"brush\").selectAll(\"g.brush\")\n\n    svgInstance.select(\"g.brush\").call(setBrushEvent) // 브러쉬 이벤트 바인딩\n  }\n\n  React.useEffect(() => {\n    createBrush()\n  }, [])\n\n  return (\n    <>\n      <svg width='1200px' ref={testRef}></svg>\n      <div>\n        {state.map((i, idx) => (\n          <p key={idx}>{i}</p>\n        ))}\n      </div>\n    </>\n  )\n}\n\nexport default Brush\n","/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/tempData/lineChartData.js",[],"/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/components/ZoomableLineChart.js",["51","52"],"import * as React from \"react\"\nimport {\n  select,\n  brushX,\n  line,\n  scaleLinear,\n  extent,\n  scaleUtc,\n  axisBottom,\n  axisLeft,\n} from \"d3\"\nimport { gatherByKeys } from \"../utils/convertChartData\"\n\nfunction ZoomableLineChart({ data = [] }) {\n  const svgRef = React.useRef()\n  const [chartNode, setChartNode] = React.useState(null)\n\n  const margin = {\n    top: 20,\n    right: 30,\n    bottom: 30,\n    left: 50,\n  }\n  const width = 1200\n  const height = 400\n\n  const makeChart = () => {\n    const svgLine = select(svgRef.current)\n    const _data = gatherByKeys(data)\n\n    const x = scaleUtc()\n      .domain(extent(_data.timestamp, (d) => d))\n      .range([margin.left, width - margin.right])\n\n    const y = scaleLinear()\n      .domain(extent(_data.value, (d) => d))\n      .range([height - margin.bottom, margin.top])\n\n    const xAxis = (g) =>\n      g\n        .attr(\"transform\", `translate(0, ${height - margin.bottom})`)\n        .call(axisBottom(x))\n\n    const yAxis = (g) =>\n      g.attr(\"transform\", `translate(${margin.left}, 0)`).call(axisLeft(y))\n\n    const brushEvent = (e) => {\n      const selectedExtend = e.selection\n      console.log(\"event\", selectedExtend)\n    }\n    const setBrushEvent = brushX()\n      .extent([\n        [margin.left, 0],\n        [width - margin.right, height - margin.bottom],\n      ])\n      .on(\"brush\", brushEvent)\n\n    const testBrush = (g) => g.attr(\"class\", \"brush\").call(setBrushEvent)\n\n    const _line = line()\n      .defined((_data) => !isNaN(_data.value))\n      .x((d) => x(d.timestamp))\n      .y((d) => y(d.value))\n\n    svgLine.append(\"g\").call(xAxis)\n    svgLine.append(\"g\").call(yAxis)\n\n    svgLine.append(\"g\").call(testBrush)\n\n    svgLine\n      .append(\"path\")\n      .datum(data)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"steelblue\")\n      .attr(\"stroke-width\", 1.5)\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"stroke-linecap\", \"round\")\n      .attr(\"d\", _line)\n\n    return svgLine.node()\n  }\n\n  React.useEffect(() => {\n    setChartNode(makeChart())\n  }, [data])\n\n  return <svg width={width} height={height} ref={svgRef}></svg>\n}\n\nexport default ZoomableLineChart\n","/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/components/ZoomableAreaChart.js",["53","54","55","56","57"],"/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/components/ZoomableAreaChartTooltip.js",["58","59","60","61","62","63","64","65","66","67","68","69","70","71","72"],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":3,"column":3,"nodeType":"79","messageId":"80","endLine":3,"endColumn":8},{"ruleId":"77","severity":1,"message":"81","line":4,"column":3,"nodeType":"79","messageId":"80","endLine":4,"endColumn":20},{"ruleId":"77","severity":1,"message":"82","line":2,"column":27,"nodeType":"79","messageId":"80","endLine":2,"endColumn":38},{"ruleId":"83","severity":1,"message":"84","line":42,"column":6,"nodeType":"85","endLine":42,"endColumn":8,"suggestions":"86"},{"ruleId":"77","severity":1,"message":"87","line":16,"column":10,"nodeType":"79","messageId":"80","endLine":16,"endColumn":19},{"ruleId":"83","severity":1,"message":"88","line":85,"column":6,"nodeType":"85","endLine":85,"endColumn":12,"suggestions":"89"},{"ruleId":"77","severity":1,"message":"90","line":12,"column":3,"nodeType":"79","messageId":"80","endLine":12,"endColumn":6},{"ruleId":"77","severity":1,"message":"91","line":17,"column":8,"nodeType":"79","messageId":"80","endLine":17,"endColumn":14},{"ruleId":"77","severity":1,"message":"92","line":302,"column":17,"nodeType":"79","messageId":"80","endLine":302,"endColumn":18},{"ruleId":"77","severity":1,"message":"93","line":314,"column":11,"nodeType":"79","messageId":"80","endLine":314,"endColumn":20},{"ruleId":"83","severity":1,"message":"94","line":338,"column":6,"nodeType":"85","endLine":338,"endColumn":12,"suggestions":"95"},{"ruleId":"77","severity":1,"message":"96","line":3,"column":3,"nodeType":"79","messageId":"80","endLine":3,"endColumn":9},{"ruleId":"77","severity":1,"message":"97","line":4,"column":3,"nodeType":"79","messageId":"80","endLine":4,"endColumn":9},{"ruleId":"77","severity":1,"message":"98","line":5,"column":3,"nodeType":"79","messageId":"80","endLine":5,"endColumn":7},{"ruleId":"77","severity":1,"message":"82","line":6,"column":3,"nodeType":"79","messageId":"80","endLine":6,"endColumn":14},{"ruleId":"77","severity":1,"message":"99","line":7,"column":3,"nodeType":"79","messageId":"80","endLine":7,"endColumn":9},{"ruleId":"77","severity":1,"message":"100","line":8,"column":3,"nodeType":"79","messageId":"80","endLine":8,"endColumn":11},{"ruleId":"77","severity":1,"message":"101","line":9,"column":3,"nodeType":"79","messageId":"80","endLine":9,"endColumn":13},{"ruleId":"77","severity":1,"message":"102","line":10,"column":3,"nodeType":"79","messageId":"80","endLine":10,"endColumn":11},{"ruleId":"77","severity":1,"message":"103","line":11,"column":3,"nodeType":"79","messageId":"80","endLine":11,"endColumn":17},{"ruleId":"77","severity":1,"message":"104","line":12,"column":3,"nodeType":"79","messageId":"80","endLine":12,"endColumn":11},{"ruleId":"77","severity":1,"message":"105","line":13,"column":3,"nodeType":"79","messageId":"80","endLine":13,"endColumn":10},{"ruleId":"77","severity":1,"message":"91","line":15,"column":8,"nodeType":"79","messageId":"80","endLine":15,"endColumn":14},{"ruleId":"77","severity":1,"message":"106","line":16,"column":10,"nodeType":"79","messageId":"80","endLine":16,"endColumn":22},{"ruleId":"77","severity":1,"message":"107","line":17,"column":10,"nodeType":"79","messageId":"80","endLine":17,"endColumn":15},{"ruleId":"77","severity":1,"message":"108","line":20,"column":7,"nodeType":"79","messageId":"80","endLine":20,"endColumn":16},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'Brush' is defined but never used.","Identifier","unusedVar","'ZoomableLineChart' is defined but never used.","'scaleLinear' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'createBrush'. Either include it or remove the dependency array.","ArrayExpression",["111"],"'chartNode' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'makeChart'. Either include it or remove the dependency array.",["112"],"'arc' is defined but never used.","'styled' is defined but never used.","'x' is assigned a value but never used.","'brushNode' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'chartNode' and 'makeChart'. Either include them or remove the dependency array. You can also do a functional update 'setChartNode(c => ...)' if you only need 'chartNode' in the 'setChartNode' call.",["113"],"'select' is defined but never used.","'brushX' is defined but never used.","'area' is defined but never used.","'extent' is defined but never used.","'scaleUtc' is defined but never used.","'axisBottom' is defined but never used.","'axisLeft' is defined but never used.","'curveMonotoneX' is defined but never used.","'bisector' is defined but never used.","'pointer' is defined but never used.","'gatherByKeys' is defined but never used.","'times' is defined but never used.","'initState' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [createBrush]",{"range":"120","text":"121"},"Update the dependencies array to be: [data, makeChart]",{"range":"122","text":"123"},"Update the dependencies array to be: [chartNode, data, makeChart]",{"range":"124","text":"125"},[1182,1184],"[createBrush]",[2016,2022],"[data, makeChart]",[9195,9201],"[chartNode, data, makeChart]"]