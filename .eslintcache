[{"/Users/tom783/programming/practices/d3Practice/d3chart/src/index.js":"1","/Users/tom783/programming/practices/d3Practice/d3chart/src/reportWebVitals.js":"2","/Users/tom783/programming/practices/d3Practice/d3chart/src/App.js":"3","/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/components/index.js":"4","/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/utils/convertChartData.js":"5","/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/components/Brush.js":"6","/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/tempData/lineChartData.js":"7","/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/components/ZoomableLineChart.js":"8","/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/components/ZoomableAreaChart.js":"9","/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/components/ZoomableSyncAreaChartTooltip/index.js":"10","/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/components/ZoomableSyncAreaChart/index.js":"11","/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/utils/bindingEventsMultiLineChart.js":"12","/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/container/index.js":"13","/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/container/multiLineChart/ChartContainer.js":"14","/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/utils/updateMultiLineChart.js":"15"},{"size":500,"mtime":1611798236434,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1611798236435,"results":"18","hashOfConfig":"17"},{"size":1405,"mtime":1613638139654,"results":"19","hashOfConfig":"17"},{"size":341,"mtime":1613376703620,"results":"20","hashOfConfig":"17"},{"size":232,"mtime":1612226426390,"results":"21","hashOfConfig":"17"},{"size":1437,"mtime":1612245508187,"results":"22","hashOfConfig":"17"},{"size":359,"mtime":1613536521081,"results":"23","hashOfConfig":"17"},{"size":2125,"mtime":1612250685414,"results":"24","hashOfConfig":"17"},{"size":6437,"mtime":1612832860859,"results":"25","hashOfConfig":"17"},{"size":11455,"mtime":1613463815225,"results":"26","hashOfConfig":"17"},{"size":2772,"mtime":1613638063044,"results":"27","hashOfConfig":"17"},{"size":4949,"mtime":1613638170415,"results":"28","hashOfConfig":"17"},{"size":76,"mtime":1613465297657,"results":"29","hashOfConfig":"17"},{"size":2883,"mtime":1613635066354,"results":"30","hashOfConfig":"17"},{"size":2127,"mtime":1613633194669,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"10ugnlg",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tom783/programming/practices/d3Practice/d3chart/src/index.js",[],["66","67"],"/Users/tom783/programming/practices/d3Practice/d3chart/src/reportWebVitals.js",[],"/Users/tom783/programming/practices/d3Practice/d3chart/src/App.js",["68","69","70","71","72","73","74","75"],"/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/components/index.js",[],"/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/utils/convertChartData.js",[],"/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/components/Brush.js",["76","77"],"import * as React from \"react\"\nimport { brushX, axisTop, scaleLinear, select, extent, scaleUtc } from \"d3\"\nimport { gatherByKeys } from \"../utils/convertChartData\"\n\nfunction Brush({ data = [] }) {\n  const testRef = React.useRef()\n  const [state, setState] = React.useState([])\n\n  const brushEvent = (e) => {\n    const selectedExtend = e.selection\n    setState(selectedExtend)\n  }\n\n  const createBrush = () => {\n    const _data = gatherByKeys(data)\n\n    const svgInstance = select(testRef.current)\n    const scale = scaleUtc()\n      .domain(extent(_data.timestamp, (d) => d))\n      .range([0, 1200])\n    const setBrushEvent = brushX()\n      .extent([\n        [0, 0], //[brush 설정 x축 범위, brush 높이 좌표]\n        [1200, 100],\n      ])\n      .on(\"brush\", brushEvent)\n    const dayAxis = axisTop().scale(scale)\n\n    svgInstance\n      .append(\"g\")\n      .attr(\"class\", \"brushaxis\")\n      .attr(\"transform\", \"translate(0, 25)\")\n\n    svgInstance.select(\"g.brushaxis\").call(dayAxis) // 브러쉬 axis축 설정\n    svgInstance.append(\"g\").attr(\"class\", \"brush\").selectAll(\"g.brush\")\n\n    svgInstance.select(\"g.brush\").call(setBrushEvent) // 브러쉬 이벤트 바인딩\n  }\n\n  React.useEffect(() => {\n    createBrush()\n  }, [])\n\n  return (\n    <>\n      <svg width='1200px' ref={testRef}></svg>\n      <div>\n        {state.map((i, idx) => (\n          <p key={idx}>{i}</p>\n        ))}\n      </div>\n    </>\n  )\n}\n\nexport default Brush\n","/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/tempData/lineChartData.js",[],"/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/components/ZoomableLineChart.js",["78","79"],"import * as React from \"react\"\nimport {\n  select,\n  brushX,\n  line,\n  scaleLinear,\n  extent,\n  scaleUtc,\n  axisBottom,\n  axisLeft,\n} from \"d3\"\nimport { gatherByKeys } from \"../utils/convertChartData\"\n\nfunction ZoomableLineChart({ data = [] }) {\n  const svgRef = React.useRef()\n  const [chartNode, setChartNode] = React.useState(null)\n\n  const margin = {\n    top: 20,\n    right: 30,\n    bottom: 30,\n    left: 50,\n  }\n  const width = 1200\n  const height = 400\n\n  const makeChart = () => {\n    const svgLine = select(svgRef.current)\n    const _data = gatherByKeys(data)\n\n    const x = scaleUtc()\n      .domain(extent(_data.timestamp, (d) => d))\n      .range([margin.left, width - margin.right])\n\n    const y = scaleLinear()\n      .domain(extent(_data.value, (d) => d))\n      .range([height - margin.bottom, margin.top])\n\n    const xAxis = (g) =>\n      g\n        .attr(\"transform\", `translate(0, ${height - margin.bottom})`)\n        .call(axisBottom(x))\n\n    const yAxis = (g) =>\n      g.attr(\"transform\", `translate(${margin.left}, 0)`).call(axisLeft(y))\n\n    const brushEvent = (e) => {\n      const selectedExtend = e.selection\n      console.log(\"event\", selectedExtend)\n    }\n    const setBrushEvent = brushX()\n      .extent([\n        [margin.left, 0],\n        [width - margin.right, height - margin.bottom],\n      ])\n      .on(\"brush\", brushEvent)\n\n    const testBrush = (g) => g.attr(\"class\", \"brush\").call(setBrushEvent)\n\n    const _line = line()\n      .defined((_data) => !isNaN(_data.value))\n      .x((d) => x(d.timestamp))\n      .y((d) => y(d.value))\n\n    svgLine.append(\"g\").call(xAxis)\n    svgLine.append(\"g\").call(yAxis)\n\n    svgLine.append(\"g\").call(testBrush)\n\n    svgLine\n      .append(\"path\")\n      .datum(data)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"steelblue\")\n      .attr(\"stroke-width\", 1.5)\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"stroke-linecap\", \"round\")\n      .attr(\"d\", _line)\n\n    return svgLine.node()\n  }\n\n  React.useEffect(() => {\n    setChartNode(makeChart())\n  }, [data])\n\n  return <svg width={width} height={height} ref={svgRef}></svg>\n}\n\nexport default ZoomableLineChart\n","/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/components/ZoomableAreaChart.js",["80","81","82","83","84","85","86"],"import * as React from \"react\"\nimport {\n  select,\n  brushX,\n  area,\n  scaleLinear,\n  extent,\n  scaleUtc,\n  axisBottom,\n  axisLeft,\n  curveMonotoneX,\n  utcHour,\n  bisector,\n  pointer,\n} from \"d3\"\nimport styled from \"@emotion/styled\"\nimport { gatherByKeys } from \"../utils/convertChartData\"\nconst initState = {\n  focusViewChartNode: null,\n  contextViewChartNode: null,\n}\n\nconst ZoomableAreaChart = ({\n  data = [],\n  width = 1200,\n  lineColor = \"#abd5ff\",\n  color = \"#fff\",\n  focusArea = {\n    height: 400,\n    marginTop: 20,\n    marginRight: 30,\n    marginBottom: 30,\n    marginLeft: 50,\n  },\n  contextArea = {\n    height: 150,\n    marginTop: 20,\n    marginRight: 30,\n    marginBottom: 30,\n    marginLeft: 50,\n  },\n}) => {\n  const svgRef = React.useRef()\n  const totalHeight =\n    focusArea.height +\n    focusArea.marginTop +\n    focusArea.marginBottom +\n    contextArea.height +\n    contextArea.marginTop +\n    contextArea.marginBottom\n\n  const makeChart = (data) => {\n    const svgInstance = select(svgRef.current)\n    const _data = gatherByKeys(data)\n\n    const chartSet = () => {\n      const focusX = scaleUtc()\n        .domain(extent(_data.timestamp, (d) => d))\n        .range([0, width - focusArea.marginRight - focusArea.marginLeft])\n\n      const focusY = scaleLinear()\n        .domain(extent(_data.value, (d) => d))\n        .range([focusArea.height - focusArea.marginBottom, focusArea.marginTop])\n\n      const focusXAxis = axisBottom(focusX).tickSizeOuter(0)\n      const focusYAxis = axisLeft(focusY).tickSizeOuter(0)\n\n      const focusDataArea = area()\n        .curve(curveMonotoneX)\n        .x((d) => focusX(d.timestamp))\n        .y0(focusArea.height - focusArea.marginBottom)\n        .y1((d) => focusY(d.value))\n\n      const contextX = scaleUtc()\n        .domain(focusX.domain())\n        .range([0, width - contextArea.marginRight - contextArea.marginLeft])\n\n      const contextY = scaleLinear()\n        .domain(focusY.domain())\n        .range([\n          contextArea.height - contextArea.marginBottom,\n          contextArea.marginTop,\n        ])\n\n      const contextXAxis = axisBottom(contextX).tickSizeOuter(0)\n      const contextYAxis = axisLeft(contextY).tickSizeOuter(0)\n\n      const contextDataArea = area()\n        .curve(curveMonotoneX)\n        .x((d) => contextX(d.timestamp))\n        .y0(contextArea.height - contextArea.marginBottom)\n        .y1((d) => contextY(d.value))\n\n      const brush = brushX(contextX).extent([\n        [0, 0],\n        [\n          width - contextArea.marginRight - contextArea.marginLeft,\n          contextArea.height - contextArea.marginBottom,\n        ],\n      ])\n\n      return {\n        focusX,\n        focusY,\n        focusXAxis,\n        focusYAxis,\n        focusDataArea,\n        contextX,\n        contextY,\n        contextXAxis,\n        contextYAxis,\n        contextDataArea,\n        brush,\n      }\n    }\n\n    const {\n      focusX,\n      focusY,\n      focusXAxis,\n      focusYAxis,\n      focusDataArea,\n      contextX,\n      contextY,\n      contextXAxis,\n      contextYAxis,\n      contextDataArea,\n      brush,\n    } = chartSet()\n\n    const createChart = () => {\n      svgInstance\n        .append(\"defs\")\n        .append(\"clipPath\")\n        .attr(\"id\", \"clip\")\n        .append(\"rect\")\n        .style(\"width\", width - focusArea.marginLeft - focusArea.marginRight)\n        .style(\"height\", focusArea.height - focusArea.marginBottom)\n\n      const focusChart = svgInstance\n        .append(\"g\")\n        .attr(\"class\", \"focus\")\n        .attr(\n          \"transform\",\n          `translate(${focusArea.marginLeft}, ${\n            contextArea.marginTop +\n            contextArea.height +\n            contextArea.marginBottom +\n            focusArea.marginTop\n          })`\n        )\n\n      focusChart\n        .append(\"path\")\n        .datum(data)\n        .attr(\"class\", \"focus-area\")\n        .attr(\"clip-path\", \"url(#clip)\")\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", lineColor)\n        .attr(\"stroke-width\", 1.5)\n        .attr(\"d\", focusDataArea)\n\n      focusChart\n        .append(\"g\")\n        .attr(\"class\", \"focus-x-axis\")\n        .style(\"color\", color)\n        .attr(\n          \"transform\",\n          `translate(0, ${focusArea.height - focusArea.marginBottom})`\n        )\n        .call(focusXAxis)\n\n      focusChart\n        .append(\"g\")\n        .attr(\"class\", \"y-axis\")\n        .style(\"color\", color)\n        .call(focusYAxis)\n        .call((g) => g.select(\".domain\").remove()) // y축 라인 제거\n\n      const contextChart = svgInstance\n        .append(\"g\")\n        .attr(\"class\", \"context\")\n        .attr(\n          \"transform\",\n          `translate(${contextArea.marginLeft}, ${contextArea.marginTop})`\n        )\n\n      contextChart\n        .append(\"path\")\n        .datum(data)\n        .attr(\"class\", \"context-area\")\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", lineColor)\n        .attr(\"stroke-width\", 1.5)\n        .attr(\"d\", contextDataArea)\n\n      contextChart\n        .append(\"g\")\n        .attr(\"class\", \"context-x-axis\")\n        .style(\"color\", color)\n        .attr(\n          \"transform\",\n          `translate(0, ${contextArea.height - contextArea.marginBottom})`\n        )\n        .call(contextXAxis)\n\n      contextChart\n        .append(\"g\")\n        .attr(\"class\", \"y-axis\")\n        .style(\"color\", \"#fff\")\n        .call(contextYAxis)\n        .call((g) => g.select(\".domain\").remove())\n\n      contextChart.append(\"g\").attr(\"class\", \"x-brush\")\n    }\n\n    const setEvent = () => {\n      const brushEvent = ({ selection }) => {\n        let extent = selection.map((d) => {\n          return contextX.invert(d)\n        })\n        focusX.domain(extent)\n        svgInstance.select(\".focus-area\").attr(\"d\", focusDataArea)\n        svgInstance.select(\".focus-x-axis\").call(focusXAxis)\n      }\n\n      const defaultSelection = [\n        contextX(utcHour.offset(contextX.domain()[1], -1)),\n        contextX.range()[1],\n      ]\n\n      const brushended = ({ selection }) => {\n        if (!selection) {\n          svgInstance.select(\"g.x-brush\").call(brush.move, defaultSelection)\n        }\n      }\n\n      brush.on(\"brush\", brushEvent).on(\"end\", brushended)\n      svgInstance\n        .select(\"g.x-brush\")\n        .call(brush)\n        .call(brush.move, defaultSelection)\n    }\n\n    createChart()\n    setEvent()\n  }\n\n  React.useEffect(() => {\n    makeChart(data)\n  }, [data])\n\n  return <svg width={width} height={totalHeight} ref={svgRef}></svg>\n}\n\nexport default ZoomableAreaChart\n","/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/components/ZoomableSyncAreaChartTooltip/index.js",["87","88","89","90"],"/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/components/ZoomableSyncAreaChart/index.js",["91","92","93"],"/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/utils/bindingEventsMultiLineChart.js",["94","95","96","97","98","99","100","101","102","103"],"/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/container/index.js",[],"/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/container/multiLineChart/ChartContainer.js",["104","105","106"],"/Users/tom783/programming/practices/d3Practice/d3chart/src/components-library/utils/updateMultiLineChart.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":4,"column":3,"nodeType":"113","messageId":"114","endLine":4,"endColumn":8},{"ruleId":"111","severity":1,"message":"115","line":5,"column":3,"nodeType":"113","messageId":"114","endLine":5,"endColumn":20},{"ruleId":"111","severity":1,"message":"116","line":6,"column":3,"nodeType":"113","messageId":"114","endLine":6,"endColumn":20},{"ruleId":"111","severity":1,"message":"117","line":7,"column":3,"nodeType":"113","messageId":"114","endLine":7,"endColumn":31},{"ruleId":"111","severity":1,"message":"118","line":8,"column":3,"nodeType":"113","messageId":"114","endLine":8,"endColumn":24},{"ruleId":"111","severity":1,"message":"119","line":11,"column":10,"nodeType":"113","messageId":"114","endLine":11,"endColumn":22},{"ruleId":"111","severity":1,"message":"120","line":12,"column":8,"nodeType":"113","messageId":"114","endLine":12,"endColumn":35},{"ruleId":"111","severity":1,"message":"121","line":24,"column":17,"nodeType":"113","messageId":"114","endLine":24,"endColumn":25},{"ruleId":"111","severity":1,"message":"122","line":2,"column":27,"nodeType":"113","messageId":"114","endLine":2,"endColumn":38},{"ruleId":"123","severity":1,"message":"124","line":42,"column":6,"nodeType":"125","endLine":42,"endColumn":8,"suggestions":"126"},{"ruleId":"111","severity":1,"message":"127","line":16,"column":10,"nodeType":"113","messageId":"114","endLine":16,"endColumn":19},{"ruleId":"123","severity":1,"message":"128","line":85,"column":6,"nodeType":"125","endLine":85,"endColumn":12,"suggestions":"129"},{"ruleId":"111","severity":1,"message":"130","line":13,"column":3,"nodeType":"113","messageId":"114","endLine":13,"endColumn":11},{"ruleId":"111","severity":1,"message":"131","line":14,"column":3,"nodeType":"113","messageId":"114","endLine":14,"endColumn":10},{"ruleId":"111","severity":1,"message":"132","line":16,"column":8,"nodeType":"113","messageId":"114","endLine":16,"endColumn":14},{"ruleId":"111","severity":1,"message":"133","line":18,"column":7,"nodeType":"113","messageId":"114","endLine":18,"endColumn":16},{"ruleId":"111","severity":1,"message":"134","line":119,"column":7,"nodeType":"113","messageId":"114","endLine":119,"endColumn":13},{"ruleId":"111","severity":1,"message":"135","line":124,"column":7,"nodeType":"113","messageId":"114","endLine":124,"endColumn":15},{"ruleId":"123","severity":1,"message":"128","line":251,"column":6,"nodeType":"125","endLine":251,"endColumn":12,"suggestions":"136"},{"ruleId":"111","severity":1,"message":"132","line":17,"column":8,"nodeType":"113","messageId":"114","endLine":17,"endColumn":14},{"ruleId":"111","severity":1,"message":"133","line":19,"column":7,"nodeType":"113","messageId":"114","endLine":19,"endColumn":16},{"ruleId":"111","severity":1,"message":"137","line":333,"column":17,"nodeType":"113","messageId":"114","endLine":333,"endColumn":18},{"ruleId":"123","severity":1,"message":"128","line":416,"column":6,"nodeType":"125","endLine":416,"endColumn":46,"suggestions":"138"},{"ruleId":"111","severity":1,"message":"139","line":11,"column":3,"nodeType":"113","messageId":"114","endLine":11,"endColumn":10},{"ruleId":"111","severity":1,"message":"130","line":12,"column":3,"nodeType":"113","messageId":"114","endLine":12,"endColumn":11},{"ruleId":"111","severity":1,"message":"131","line":13,"column":3,"nodeType":"113","messageId":"114","endLine":13,"endColumn":10},{"ruleId":"111","severity":1,"message":"140","line":2,"column":3,"nodeType":"113","messageId":"114","endLine":2,"endColumn":9},{"ruleId":"111","severity":1,"message":"141","line":3,"column":3,"nodeType":"113","messageId":"114","endLine":3,"endColumn":9},{"ruleId":"111","severity":1,"message":"142","line":4,"column":3,"nodeType":"113","messageId":"114","endLine":4,"endColumn":7},{"ruleId":"111","severity":1,"message":"122","line":5,"column":3,"nodeType":"113","messageId":"114","endLine":5,"endColumn":14},{"ruleId":"111","severity":1,"message":"143","line":6,"column":3,"nodeType":"113","messageId":"114","endLine":6,"endColumn":9},{"ruleId":"111","severity":1,"message":"144","line":7,"column":3,"nodeType":"113","messageId":"114","endLine":7,"endColumn":11},{"ruleId":"111","severity":1,"message":"145","line":8,"column":3,"nodeType":"113","messageId":"114","endLine":8,"endColumn":13},{"ruleId":"111","severity":1,"message":"146","line":9,"column":3,"nodeType":"113","messageId":"114","endLine":9,"endColumn":11},{"ruleId":"111","severity":1,"message":"147","line":10,"column":3,"nodeType":"113","messageId":"114","endLine":10,"endColumn":17},{"ruleId":"111","severity":1,"message":"137","line":160,"column":15,"nodeType":"113","messageId":"114","endLine":160,"endColumn":16},{"ruleId":"111","severity":1,"message":"148","line":34,"column":14,"nodeType":"113","messageId":"114","endLine":34,"endColumn":24},{"ruleId":"111","severity":1,"message":"148","line":91,"column":14,"nodeType":"113","messageId":"114","endLine":91,"endColumn":24},{"ruleId":"123","severity":1,"message":"149","line":129,"column":6,"nodeType":"125","endLine":129,"endColumn":53,"suggestions":"150"},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"no-unused-vars","'Brush' is defined but never used.","Identifier","unusedVar","'ZoomableLineChart' is defined but never used.","'ZoomableAreaChart' is defined but never used.","'ZoomableSyncAreaChartTooltip' is defined but never used.","'ZoomableSyncAreaChart' is defined but never used.","'gatherByKeys' is defined but never used.","'bindingEventsMultiLineChart' is defined but never used.","'setWidth' is assigned a value but never used.","'scaleLinear' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'createBrush'. Either include it or remove the dependency array.","ArrayExpression",["153"],"'chartNode' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'makeChart'. Either include it or remove the dependency array.",["154"],"'bisector' is defined but never used.","'pointer' is defined but never used.","'styled' is defined but never used.","'initState' is assigned a value but never used.","'focusY' is assigned a value but never used.","'contextY' is assigned a value but never used.",["155"],"'x' is assigned a value but never used.",["156"],"'utcHour' is defined but never used.","'select' is defined but never used.","'brushX' is defined but never used.","'area' is defined but never used.","'extent' is defined but never used.","'scaleUtc' is defined but never used.","'axisBottom' is defined but never used.","'axisLeft' is defined but never used.","'curveMonotoneX' is defined but never used.","'focusBrush' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'init', 'makeChart', and 'updateChart'. Either include them or remove the dependency array.",["157"],"no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"160","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},"Update the dependencies array to be: [createBrush]",{"range":"167","text":"168"},"Update the dependencies array to be: [data, makeChart]",{"range":"169","text":"170"},{"range":"171","text":"170"},"Update the dependencies array to be: [data, useBrushHandle, lineColor, color, makeChart]",{"range":"172","text":"173"},"Update the dependencies array to be: [data, width, height, margin, color, lineColor, init, makeChart, updateChart]",{"range":"174","text":"175"},[1182,1184],"[createBrush]",[2016,2022],"[data, makeChart]",[6313,6319],[11186,11226],"[data, useBrushHandle, lineColor, color, makeChart]",[2642,2689],"[data, width, height, margin, color, lineColor, init, makeChart, updateChart]"]